{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","note","stepNumber","xIsNext","currentNote","slice","length","calculateWinner","setState","concat","step","key","event","target","status","current","winner","moves","map","move","desc","jumpTo","notes","handleClick","Input","onValueChange","bind","onChange","type","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7c8e6b6.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n/*\r\nclass Note extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    //this.setState({value: event.target.value});\r\n    //this.props.onClick(this.state.value);\r\n    //this.setState({value: event.target.value});\r\n    this.props.onClick({value: event.target.value});\r\n    this.setState({value: this.props.currentNote});\r\n    //onClick={() => this.props.onClick(i)\r\n  }\r\n  render() {\r\n    return (\r\n          <input type=\"text\" onChange={()=>this.props.onClick({event.target.value})} />\r\n    );\r\n  }\r\n}\r\n*/\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n          note: ''\r\n        }\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      currentNote: '',\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n          note: this.state.currentNote\r\n        }\r\n      ]),\r\n      currentNote: '',\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0\r\n    });\r\n  }\r\n  onValueChange(key, event) {\r\n    this.setState({currentNote: event.target.value})\r\n  }\r\n\r\n  \r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n    \r\n    const notes = history.map((step, move) => {\r\n      const desc = history[move].note;\r\n      return (\r\n        <li key={move}>{desc}</li>\r\n      );\r\n    });\r\n    \r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \" player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={i => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <Input value={this.state.currentNote} onValueChange={this.onValueChange.bind(this, 'currentNote')} />\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n          <ol>{notes}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass Input extends React.Component {\r\n render() {\r\n     return (\r\n\r\n        <input\r\n          onChange={this.props.onValueChange}\r\n          value={this.props.value}\r\n          type=\"text\"\r\n        />\r\n\r\n    );\r\n  }\r\n}\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}"],"sourceRoot":""}